{"version":3,"file":"index.cjs.js","sources":["Reporter/Stock/FancyReporter.js","WriteStreamInterceptor.js","Reporter/Stock/BaseReporter.js","Reporter/Stock/BasicReporter.js","Reporter/Stock/StockReporterMap.js","Config/DefaultConfig.js","index.js","Config/ArgsParser.js","Config/ConfigMerger.js","ModuleResolver.js"],"sourcesContent":["import ansiEscapes from \"ansi-escapes\";\r\nimport createCallsiteRecord from \"callsite-record\";\r\nimport chalk from \"chalk\";\r\nimport { WriteStreamInterceptor } from \"../../WriteStreamInterceptor\";\r\nimport { BaseReporter } from \"./BaseReporter\";\r\nvar TestResult;\r\n(function (TestResult) {\r\n    TestResult[TestResult[\"SUCCESS\"] = 0] = \"SUCCESS\";\r\n    TestResult[TestResult[\"FAIL\"] = 1] = \"FAIL\";\r\n    TestResult[TestResult[\"SKIPPED\"] = 2] = \"SKIPPED\";\r\n    TestResult[TestResult[\"TIMEOUT\"] = 3] = \"TIMEOUT\";\r\n})(TestResult || (TestResult = {}));\r\n/**\r\n * A fancier reporter, with spinners and other fancy things. Mostly to play around with ideas.\r\n */\r\nclass FancyReporter extends BaseReporter {\r\n    constructor(stdOutInterceptor = new WriteStreamInterceptor(), stdErrInterceptor = new WriteStreamInterceptor()) {\r\n        super();\r\n        this.timer = null;\r\n        this.spinnerIndex = 0;\r\n        this.spinnerIcons = [\"‚ó¥\", \"‚ó∑\", \"‚ó∂\", \"‚óµ\"]; //[\"üåë\", \"üåí\", \"üåì\", \"üåî\", \"üåï\", \"üåù\", \"üåñ\", \"üåó\", \"üåò\", \"üåö\"];\r\n        this.onProcessLog = (text) => {\r\n            //return text;\r\n        };\r\n        this.stdOutInterceptor = stdOutInterceptor;\r\n        this.stdErrInterceptor = stdErrInterceptor;\r\n    }\r\n    initialize() {\r\n        this.stdOutInterceptor.start(process.stdout, this.onProcessLog);\r\n        this.stdErrInterceptor.start(process.stderr, this.onProcessLog);\r\n        this.stdOutInterceptor.writeDirect(\"\\u001B[?25l\");\r\n        this.writeLine(`\\n${chalk.whiteBright(\"‚òæ\")} Umbra Test`);\r\n        this.writeLine(chalk.white(`‚§∑ All logs will be intercepted and written to a local file.`));\r\n        this.drawHorizontalLine();\r\n        return Promise.resolve();\r\n    }\r\n    beforeDescribe(title) {\r\n        this.writeLine(this.getIndentedText(chalk.cyan(\"‚§∑\") + ` ${title}`));\r\n        super.beforeDescribe(title);\r\n    }\r\n    ;\r\n    beforeTest(title) {\r\n        this.startSpinner(title);\r\n        super.beforeTest(title);\r\n    }\r\n    ;\r\n    runEnd(results) {\r\n        this.stdOutInterceptor.writeDirect(\"\\u001B[?25h\");\r\n        this.stdOutInterceptor.stop();\r\n        this.stdErrInterceptor.stop();\r\n    }\r\n    ;\r\n    testFail(title, error, elapsedMs) {\r\n        this.stopSpinner(TestResult.FAIL);\r\n        this.stdErrInterceptor.writeDirect(error.message + \"\\n\");\r\n        const prettyStack = createCallsiteRecord({ forError: error }).renderSync({\r\n            /* TODO: Determine whether to default node_module stripping to true\r\n            stackFilter(frame) {\r\n                return !frame.fileName.includes(\"node_modules\");\r\n            },\r\n             */\r\n            frameSize: 3\r\n        });\r\n        this.stdErrInterceptor.writeDirect(prettyStack + \"\\n\\n\");\r\n        super.testFail(title, error, elapsedMs);\r\n    }\r\n    ;\r\n    testTimeout(title, elapsedMs, timeoutMs) {\r\n        this.stopSpinner(TestResult.TIMEOUT);\r\n        super.testTimeout(title, elapsedMs, timeoutMs);\r\n    }\r\n    ;\r\n    testSkipped(title) {\r\n        this.stopSpinner(TestResult.SKIPPED);\r\n        super.testSkipped(title);\r\n    }\r\n    ;\r\n    testSuccess(title, elapsedMs) {\r\n        this.stopSpinner(TestResult.SUCCESS);\r\n        super.testSuccess(title, elapsedMs);\r\n    }\r\n    ;\r\n    drawHorizontalLine() {\r\n        for (let i = 0; i < process.stdout.columns; i++) {\r\n            this.stdOutInterceptor.writeDirect(\"\\u2500\");\r\n        }\r\n        this.stdOutInterceptor.writeDirect(\"\\n\");\r\n    }\r\n    writeLine(text) {\r\n        this.stdOutInterceptor.writeDirect(text + \"\\n\");\r\n    }\r\n    startSpinner(text) {\r\n        this.stdOutInterceptor.writeDirect(this.getIndentedText(chalk.yellow(this.spinnerIcons[this.spinnerIndex]) + \" \" + text));\r\n        this.stdOutInterceptor.writeDirect(ansiEscapes.cursorLeft);\r\n        this.stdOutInterceptor.writeDirect(ansiEscapes.cursorForward(this.currentIndentLevel + 1));\r\n        this.timer = setInterval(() => {\r\n            this.stdOutInterceptor.writeDirect(ansiEscapes.cursorBackward(1));\r\n            this.spinnerIndex = (this.spinnerIndex + 1) % (this.spinnerIcons.length - 1);\r\n            this.stdOutInterceptor.writeDirect(chalk.yellow(this.spinnerIcons[this.spinnerIndex]));\r\n        }, 200);\r\n    }\r\n    stopSpinner(result) {\r\n        clearInterval(this.timer);\r\n        this.stdOutInterceptor.writeDirect(ansiEscapes.cursorBackward(1));\r\n        if (result === TestResult.FAIL) {\r\n            this.stdOutInterceptor.writeDirect(chalk.redBright(\"‚úò\"));\r\n        }\r\n        else if (result === TestResult.SUCCESS) {\r\n            this.stdOutInterceptor.writeDirect(chalk.greenBright(\"‚úì\"));\r\n        }\r\n        else if (result === TestResult.TIMEOUT) {\r\n            this.stdOutInterceptor.writeDirect(chalk.redBright(\"‚è≤\"));\r\n        }\r\n        this.stdOutInterceptor.writeDirect(ansiEscapes.cursorNextLine);\r\n        this.stdOutInterceptor.writeDirect(\"\\n\");\r\n    }\r\n}\r\nexport { FancyReporter };\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmFuY3lSZXBvcnRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9SZXBvcnRlci9TdG9jay9GYW5jeVJlcG9ydGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sV0FBVyxNQUFNLGNBQWMsQ0FBQztBQUN2QyxPQUFPLG9CQUFvQixNQUFNLGlCQUFpQixDQUFDO0FBQ25ELE9BQU8sS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUcxQixPQUFPLEVBQUMsc0JBQXNCLEVBQUMsTUFBTSw4QkFBOEIsQ0FBQztBQUNwRSxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFNUMsSUFBSyxVQUtKO0FBTEQsV0FBSyxVQUFVO0lBQ1gsaURBQU8sQ0FBQTtJQUNQLDJDQUFJLENBQUE7SUFDSixpREFBTyxDQUFBO0lBQ1AsaURBQU8sQ0FBQTtBQUNYLENBQUMsRUFMSSxVQUFVLEtBQVYsVUFBVSxRQUtkO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLGFBQWMsU0FBUSxZQUFZO0lBV3BDLFlBQVksaUJBQWlCLEdBQUcsSUFBSSxzQkFBc0IsRUFBRSxFQUNoRCxpQkFBaUIsR0FBRyxJQUFJLHNCQUFzQixFQUFFO1FBQ3hELEtBQUssRUFBRSxDQUFDO1FBUkosVUFBSyxHQUFtQixJQUFJLENBQUM7UUFFN0IsaUJBQVksR0FBRyxDQUFDLENBQUM7UUFFakIsaUJBQVksR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsK0RBQStEO1FBNEVwRyxpQkFBWSxHQUFHLENBQUMsSUFBWSxFQUFpQixFQUFFO1lBQ25ELGNBQWM7UUFDbEIsQ0FBQyxDQUFDO1FBeEVFLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxpQkFBaUIsQ0FBQztRQUMzQyxJQUFJLENBQUMsaUJBQWlCLEdBQUcsaUJBQWlCLENBQUM7SUFDL0MsQ0FBQztJQUVELFVBQVU7UUFDTixJQUFJLENBQUMsaUJB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","/**\r\n * Manages interception of NodeJS WriteStreams, such as stdout. Allows consumers to listen and/or fully intercept\r\n * write to the stream.\r\n */\r\nclass WriteStreamInterceptor {\r\n    constructor() {\r\n        this.started = false;\r\n    }\r\n    /**\r\n     * Starts the stream interceptor. If passthrough is set to true, then logs will continue to be written to the stream.\r\n     */\r\n    start(streamToIntercept, onWrite) {\r\n        if (this.started) {\r\n            throw new Error(\"WriteStreamInterceptor has already been started!\");\r\n        }\r\n        this.started = true;\r\n        this.streamToIntercept = streamToIntercept;\r\n        this.originalStreamWrite = this.streamToIntercept.write;\r\n        this.streamToIntercept.write = (string) => {\r\n            const processedText = onWrite(string);\r\n            if (typeof processedText === \"string\") {\r\n                this.writeDirect(processedText);\r\n            }\r\n            return true;\r\n        };\r\n    }\r\n    stop() {\r\n        if (!this.started) {\r\n            throw new Error(\"WriteStreamInterceptor has not been started!\");\r\n        }\r\n        this.streamToIntercept.write = this.originalStreamWrite;\r\n        this.started = false;\r\n    }\r\n    /**\r\n     * Writes directly to the underlying WriteStream.\r\n     *\r\n     * @param text\r\n     */\r\n    writeDirect(text) {\r\n        if (!this.started) {\r\n            throw new Error(\"WriteStreamInterceptor has not been started!\");\r\n        }\r\n        this.originalStreamWrite.apply(this.streamToIntercept, [text]);\r\n    }\r\n}\r\nexport { WriteStreamInterceptor };\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV3JpdGVTdHJlYW1JbnRlcmNlcHRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9Xcml0ZVN0cmVhbUludGVyY2VwdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRztBQUNILE1BQU0sc0JBQXNCO0lBQTVCO1FBRVksWUFBTyxHQUFZLEtBQUssQ0FBQztJQTZDckMsQ0FBQztJQXpDRzs7T0FFRztJQUNILEtBQUssQ0FBQyxpQkFBcUMsRUFBRSxPQUF3QztRQUNqRixJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDZCxNQUFNLElBQUksS0FBSyxDQUFDLGtEQUFrRCxDQUFDLENBQUM7U0FDdkU7UUFDRCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztRQUNwQixJQUFJLENBQUMsaUJBQWlCLEdBQUcsaUJBQWlCLENBQUM7UUFDM0MsSUFBSSxDQUFDLG1CQUFtQixHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxLQUFLLENBQUM7UUFFeEQsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEtBQUssR0FBRyxDQUFDLE1BQU0sRUFBRSxFQUFFO1lBQ3RDLE1BQU0sYUFBYSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUN0QyxJQUFJLE9BQU8sYUFBYSxLQUFLLFFBQVEsRUFBRTtnQkFDbkMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsQ0FBQzthQUNuQztZQUNELE9BQU8sSUFBSSxDQUFDO1FBQ2hCLENBQUMsQ0FBQztJQUNOLENBQUM7SUFFRCxJQUFJO1FBQ0EsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDZixNQUFNLElBQUksS0FBSyxDQUFDLDhDQUE4QyxDQUFDLENBQUM7U0FDbkU7UUFFRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxtQkFBbUIsQ0FBQztRQUN4RCxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztJQUN6QixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILFdBQVcsQ0FBQyxJQUFZO1FBQ3BCLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ2YsTUFBTSxJQUFJLEtBQUssQ0FBQyw4Q0FBOEMsQ0FBQyxDQUFDO1NBQ25FO1FBRUQsSUFBSSxDQUFDLG1CQUFtQixDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ25FLENBQUM7Q0FDSjtBQUVELE9BQU8sRUFBQyxzQkFBc0IsRUFBQyxDQUFDIn0=","import chalk from \"chalk\";\r\n/**\r\n * Base handling of common console reporter functionality, such as tracking of passes, failures, and indentation levels\r\n * assuming tree-like test result rendering.\r\n */\r\nclass BaseReporter {\r\n    constructor() {\r\n        this.currentIndentLevel = 0;\r\n        this.passes = 0;\r\n        this.failures = 0;\r\n        this.pending = 0;\r\n    }\r\n    initialize() {\r\n        console.log(\"\\n\" + chalk.whiteBright(\"‚òæ Umbra Test\"));\r\n        BaseReporter.drawHorizontalLine();\r\n        return Promise.resolve();\r\n    }\r\n    activeFileChanged(absolutePath) {\r\n        this.activeFilePath = absolutePath;\r\n    }\r\n    ;\r\n    afterDescribe(title, elapsedMs) {\r\n        this.currentIndentLevel--;\r\n    }\r\n    ;\r\n    beforeDescribe(title) {\r\n        this.currentIndentLevel++;\r\n    }\r\n    ;\r\n    beforeTest(title) {\r\n        this.pending++;\r\n        this.currentIndentLevel++;\r\n    }\r\n    ;\r\n    runEnd(results) {\r\n        // Intentionally blank.\r\n    }\r\n    ;\r\n    runStart() {\r\n        // Intentionally blank.\r\n    }\r\n    ;\r\n    testFail(title, error, elapsedMs) {\r\n        this.pending--;\r\n        this.failures++;\r\n        this.currentIndentLevel--;\r\n    }\r\n    ;\r\n    testTimeout(title, elapsedMs, timeoutMs) {\r\n        this.pending--;\r\n        this.failures++;\r\n        this.currentIndentLevel--;\r\n    }\r\n    ;\r\n    testSkipped(title) {\r\n        this.pending--;\r\n        this.currentIndentLevel--;\r\n    }\r\n    ;\r\n    testSuccess(title, elapsedMs) {\r\n        this.pending--;\r\n        this.passes++;\r\n        this.currentIndentLevel--;\r\n    }\r\n    ;\r\n    static drawHorizontalLine() {\r\n        for (let i = 0; i < process.stdout.columns - 1; i++) {\r\n            process.stdout.write(\"\\u2500\");\r\n        }\r\n        process.stdout.write(\"\\n\");\r\n    }\r\n    getIndentedText(text, offset = 0) {\r\n        let str = \"\";\r\n        for (let i = 0; i < this.currentIndentLevel + offset; i++) {\r\n            str += \" \";\r\n        }\r\n        return str + text;\r\n    }\r\n}\r\nexport { BaseReporter };\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmFzZVJlcG9ydGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL1JlcG9ydGVyL1N0b2NrL0Jhc2VSZXBvcnRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxPQUFPLEtBQUssTUFBTSxPQUFPLENBQUM7QUFFMUI7OztHQUdHO0FBQ0gsTUFBTSxZQUFZO0lBQWxCO1FBR2MsdUJBQWtCLEdBQUcsQ0FBQyxDQUFDO1FBRXpCLFdBQU0sR0FBVyxDQUFDLENBQUM7UUFDbkIsYUFBUSxHQUFXLENBQUMsQ0FBQztRQUNyQixZQUFPLEdBQVcsQ0FBQyxDQUFDO0lBdUVoQyxDQUFDO0lBckVHLFVBQVU7UUFDTixPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsV0FBVyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7UUFDdEQsWUFBWSxDQUFDLGtCQUFrQixFQUFFLENBQUM7UUFFbEMsT0FBTyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDN0IsQ0FBQztJQUVELGlCQUFpQixDQUFDLFlBQW9CO1FBQ2xDLElBQUksQ0FBQyxjQUFjLEdBQUcsWUFBWSxDQUFDO0lBQ3ZDLENBQUM7SUFBQSxDQUFDO0lBRUYsYUFBYSxDQUFDLEtBQWEsRUFBRSxTQUFpQjtRQUMxQyxJQUFJLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztJQUM5QixDQUFDO0lBQUEsQ0FBQztJQUVGLGNBQWMsQ0FBQyxLQUFhO1FBQ3hCLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO0lBQzlCLENBQUM7SUFBQSxDQUFDO0lBRUYsVUFBVSxDQUFDLEtBQWE7UUFDcEIsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2YsSUFBSSxDQUFDLGtCQUFrQixFQUFFLENBQUM7SUFDOUIsQ0FBQztJQUFBLENBQUM7SUFFRixNQUFNLENBQUMsT0FBbUI7UUFDdEIsdUJBQXVCO0lBQzNCLENBQUM7SUFBQSxDQUFDO0lBRUYsUUFBUTtRQUNKLHVCQUF1QjtJQUMzQixDQUFDO0lBQUEsQ0FBQztJQUVGLFFBQVEsQ0FBQyxLQUFhLEVBQUUsS0FBWSxFQUFFLFNBQWlCO1FBQ25ELElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNmLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNoQixJQUFJLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztJQUM5QixDQUFDO0lBQUEsQ0FBQztJQUVGLFdBQVcsQ0FBQyxLQUFhLEVBQUUsU0FBaUIsRUFBRSxTQUFpQjtRQUMzRCxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDZixJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDaEIsSUFBSSxDQUFDLGtCQUFrQixFQUFFLENBQUM7SUFDOUIsQ0FBQztJQUFBLENBQUM7SUFFRixXQUFXLENBQUMsS0FBYTtRQUNyQixJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDZixJQUFJLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztJQUM5QixDQUFDO0lBQUEsQ0FBQztJQUVGLFdBQVcsQ0FBQyxLQUFhLEVBQUUsU0FBaUI7UUFDeEMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2YsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ2QsSUFBSSxDQUFDLGtCQUFrQixFQUFFLENBQUM7SUFDOUIsQ0FBQztJQUFBLENBQUM7SUFFTSxNQUFNLENBQUMsa0JBQWtCO1FBQzdCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLE9BQU8sR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDakQsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDbEM7UUFDRCxPQUFPLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRVMsZUFBZSxDQUFDLElBQVksRUFBRSxNQUFNLEdBQUcsQ0FBQztRQUM5QyxJQUFJLEdBQUcsR0FBRyxFQUFFLENBQUM7UUFDYixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixHQUFHLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUN2RCxHQUFHLElBQUksR0FBRyxDQUFDO1NBQ2Q7UUFDRCxPQUFPLEdBQUcsR0FBRyxJQUFJLENBQUM7SUFDdEIsQ0FBQztDQUNKO0FBRUQsT0FBTyxFQUFDLFlBQVksRUFBQyxDQUFDIn0=","import chalk from \"chalk\";\r\nimport { BaseReporter } from \"./BaseReporter\";\r\n/**\r\n * A basic reporter. Nothing fancy.\r\n */\r\nclass BasicReporter extends BaseReporter {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.verboseMode = false; // TODO: Add configuration options through umbra.config.ts\r\n        this.filesEvaluated = 0;\r\n    }\r\n    beforeDescribe(title) {\r\n        super.beforeDescribe(title);\r\n        if (this.verboseMode) {\r\n            console.log(this.getIndentedText(chalk.cyan(\"‚§∑ \") + title));\r\n        }\r\n    }\r\n    ;\r\n    beforeTest(title) {\r\n        super.beforeTest(title);\r\n        if (this.verboseMode) {\r\n            console.log(this.getIndentedText(chalk.cyan(\"‚§∑ \") + title));\r\n        }\r\n    }\r\n    ;\r\n    testFail(title, error, elapsedMs) {\r\n        super.testFail(title, error, elapsedMs);\r\n        console.log(this.getIndentedText(chalk.redBright(`‚úñ `) + title));\r\n        this.printPrettyStackTrace(error);\r\n    }\r\n    ;\r\n    testTimeout(title, elapsedMs, timeoutMs) {\r\n        super.testTimeout(title, elapsedMs, timeoutMs);\r\n        console.log(this.getIndentedText(chalk.redBright(`‚è≤ `) + title));\r\n    }\r\n    ;\r\n    testSuccess(title, elapsedMs) {\r\n        super.testSuccess(title, elapsedMs);\r\n    }\r\n    runEnd(results) {\r\n        console.log(`Tests: ${chalk.red(results.totalFailures)} failures, ${chalk.yellow(results.totalTimeouts)} timeouts, ${chalk.green(results.totalSuccesses)} passed, ${results.totalSuccesses} total`);\r\n        console.log(`Time:  ${results.elapsedTimeMs}ms`);\r\n        console.log(`Files: ${this.filesEvaluated}`);\r\n    }\r\n    activeFileChanged(absolutePath) {\r\n        this.filesEvaluated++;\r\n    }\r\n    printPrettyStackTrace(error) {\r\n        console.log(this.getIndentedText(chalk.red(\"‚§∑ \") + error.message + \"\\n\", 1));\r\n        /* Temporarily disable pretty stack traces due to an unexpected parse error popping up for some errors.\r\n        const prettyStack = createCallsiteRecord({forError: error}).renderSync({\r\n            // TODO: Determine whether to default node_module stripping to true\r\n            stackFilter(frame) {\r\n                return !frame.fileName.includes(\"node_modules\");\r\n            },\r\n\r\n            frameSize: 3\r\n        });\r\n        console.log(prettyStack + \"\\n\\n\");\r\n        */\r\n    }\r\n}\r\nexport { BasicReporter };\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmFzaWNSZXBvcnRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9SZXBvcnRlci9TdG9jay9CYXNpY1JlcG9ydGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUUxQixPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFHNUM7O0dBRUc7QUFDSCxNQUFNLGFBQWMsU0FBUSxZQUFZO0lBQXhDOztRQUVZLGdCQUFXLEdBQUcsS0FBSyxDQUFDLENBQUMsMERBQTBEO1FBQy9FLG1CQUFjLEdBQVcsQ0FBQyxDQUFDO0lBNkR2QyxDQUFDO0lBM0RHLGNBQWMsQ0FBQyxLQUFhO1FBQ3hCLEtBQUssQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFNUIsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ2xCLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7U0FDL0Q7SUFDTCxDQUFDO0lBQUEsQ0FBQztJQUVGLFVBQVUsQ0FBQyxLQUFhO1FBQ3BCLEtBQUssQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFeEIsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ2xCLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7U0FDL0Q7SUFDTCxDQUFDO0lBQUEsQ0FBQztJQUVGLFFBQVEsQ0FBQyxLQUFhLEVBQUUsS0FBWSxFQUFFLFNBQWlCO1FBQ25ELEtBQUssQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQztRQUV4QyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ2pFLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBQUEsQ0FBQztJQUVGLFdBQVcsQ0FBQyxLQUFhLEVBQUUsU0FBaUIsRUFBRSxTQUFpQjtRQUMzRCxLQUFLLENBQUMsV0FBVyxDQUFDLEtBQUssRUFBRSxTQUFTLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFFL0MsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUNyRSxDQUFDO0lBQUEsQ0FBQztJQUVGLFdBQVcsQ0FBQyxLQUFhLEVBQUUsU0FBaUI7UUFDeEMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUVELE1BQU0sQ0FBQyxPQUFtQjtRQUN0QixPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsS0FBSyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLGNBQWMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLGNBQWMsS0FBSyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLFlBQVksT0FBTyxDQUFDLGNBQWMsUUFBUSxDQUFDLENBQUM7UUFDcE0sT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLE9BQU8sQ0FBQyxhQUFhLElBQUksQ0FBQyxDQUFDO1FBQ2pELE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUMsQ0FBQztJQUNqRCxDQUFDO0lBRUQsaUJBQWlCLENBQUMsWUFBb0I7UUFDbEMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQzFCLENBQUM7SUFFTyxxQkFBcUIsQ0FBQyxLQUFZO1FBQ3RDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQyxPQUFPLEdBQUcsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFN0U7Ozs7Ozs7Ozs7VUFVRTtJQUNOLENBQUM7Q0FFSjtBQUVELE9BQU8sRUFBQyxhQUFhLEVBQUMsQ0FBQyJ9","import { FancyReporter } from \"./FancyReporter\";\r\nimport { BasicReporter } from \"./BasicReporter\";\r\nconst StockReporterMap = {\r\n    \"basic\": BasicReporter,\r\n    \"fancy\": FancyReporter\r\n};\r\nexport { StockReporterMap };\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3RvY2tSZXBvcnRlck1hcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9SZXBvcnRlci9TdG9jay9TdG9ja1JlcG9ydGVyTWFwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUM5QyxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFFOUMsTUFBTSxnQkFBZ0IsR0FBRztJQUNyQixPQUFPLEVBQUUsYUFBYTtJQUN0QixPQUFPLEVBQUUsYUFBYTtDQUN6QixDQUFDO0FBRUYsT0FBTyxFQUFDLGdCQUFnQixFQUFDLENBQUMifQ==","const DEFAULT_TIMEOUT_MS = 100;\r\nconst DefaultConfig = {\r\n    input: [],\r\n    debug: false,\r\n    debugBreak: false,\r\n    watch: false,\r\n    cacheDir: \".umbra-cache\",\r\n    timeoutMs: {\r\n        it: DEFAULT_TIMEOUT_MS,\r\n        before: DEFAULT_TIMEOUT_MS,\r\n        beforeEach: DEFAULT_TIMEOUT_MS,\r\n        after: DEFAULT_TIMEOUT_MS,\r\n        afterEach: DEFAULT_TIMEOUT_MS\r\n    },\r\n    reporting: {\r\n        outputPath: undefined,\r\n        reporters: []\r\n    },\r\n    parallel: {\r\n        idempotentFiles: false,\r\n        idempotentTests: false,\r\n    }\r\n};\r\nexport { DefaultConfig };\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGVmYXVsdENvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Db25maWcvRGVmYXVsdENvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLGtCQUFrQixHQUFHLEdBQUcsQ0FBQztBQUUvQixNQUFNLGFBQWEsR0FBZ0I7SUFDL0IsS0FBSyxFQUFFLEVBQUU7SUFDVCxLQUFLLEVBQUUsS0FBSztJQUNaLFVBQVUsRUFBRSxLQUFLO0lBQ2pCLEtBQUssRUFBRSxLQUFLO0lBQ1osUUFBUSxFQUFFLGNBQWM7SUFDeEIsU0FBUyxFQUFFO1FBQ1AsRUFBRSxFQUFFLGtCQUFrQjtRQUN0QixNQUFNLEVBQUUsa0JBQWtCO1FBQzFCLFVBQVUsRUFBRSxrQkFBa0I7UUFDOUIsS0FBSyxFQUFFLGtCQUFrQjtRQUN6QixTQUFTLEVBQUUsa0JBQWtCO0tBQ2hDO0lBQ0QsU0FBUyxFQUFFO1FBQ1AsVUFBVSxFQUFFLFNBQVM7UUFDckIsU0FBUyxFQUFFLEVBQUU7S0FDaEI7SUFDRCxRQUFRLEVBQUU7UUFDTixlQUFlLEVBQUUsS0FBSztRQUN0QixlQUFlLEVBQUUsS0FBSztLQUN6QjtDQUNKLENBQUM7QUFFRixPQUFPLEVBQUMsYUFBYSxFQUFDLENBQUMifQ==","import { spawnSync } from \"child_process\";\r\nimport * as path from \"path\";\r\nimport { existsSync, mkdirSync } from \"fs\";\r\nimport { install as installSourceMapSupport } from \"source-map-support\";\r\nimport { TestRunner } from \"@umbra-test/umbra-test-runner\";\r\nimport { ArgsParser } from \"./Config/ArgsParser\";\r\nimport { ConfigMerger } from \"./Config/ConfigMerger\";\r\nimport { StockReporterMap } from \"./Reporter/Stock/StockReporterMap\";\r\nimport { ModuleResolver } from \"./ModuleResolver\";\r\nimport { DefaultConfig } from \"./Config/DefaultConfig\";\r\nimport { BasicReporter } from \"./Reporter/Stock/BasicReporter\";\r\ninstallSourceMapSupport();\r\nconst parser = new ArgsParser();\r\nconst argConfig = parser.parse();\r\nconst configMerger = new ConfigMerger();\r\nlet finalConfig;\r\nif (existsSync(argConfig.configPath)) {\r\n    const cacheDir = argConfig.cacheDir ? argConfig.cacheDir : DefaultConfig.cacheDir;\r\n    if (!existsSync(cacheDir)) {\r\n        mkdirSync(cacheDir);\r\n    }\r\n    let finalPath = argConfig.configPath;\r\n    if (path.extname(argConfig.configPath) === \"ts\") {\r\n        finalPath = path.resolve(cacheDir, \"config.js\");\r\n        spawnSync(\"tsc\", [\"--outFile\", finalPath, argConfig.configPath], { stdio: \"inherit\" });\r\n    }\r\n    const fileConfig = require(finalPath);\r\n    finalConfig = configMerger.merge(DefaultConfig, fileConfig, argConfig);\r\n}\r\nelse {\r\n    finalConfig = configMerger.merge(DefaultConfig, argConfig);\r\n}\r\nconst runner = new TestRunner({\r\n    timeoutMs: finalConfig.timeoutMs,\r\n    stopOnFirstFail: false\r\n});\r\nconst reporterNames = finalConfig.reporting.reporters;\r\nlet reporters;\r\nif (reporterNames.length === 0) {\r\n    reporters = [new BasicReporter()];\r\n}\r\nelse {\r\n    reporters = reporterNames.map((name) => {\r\n        try {\r\n            return require(name);\r\n        }\r\n        catch (e) {\r\n            if (StockReporterMap[name]) {\r\n                return new StockReporterMap[name]();\r\n            }\r\n            throw new Error(`Unable to load reporter: ${name}`);\r\n        }\r\n    });\r\n}\r\nfor (const reporter of reporters) {\r\n    runner.on(\"activeFileChanged\", reporter.activeFileChanged.bind(reporter));\r\n    runner.on(\"beforeTest\", reporter.beforeTest.bind(reporter));\r\n    runner.on(\"testSuccess\", reporter.testSuccess.bind(reporter));\r\n    runner.on(\"testFail\", reporter.testFail.bind(reporter));\r\n    runner.on(\"testTimeout\", reporter.testTimeout.bind(reporter));\r\n    runner.on(\"beforeDescribe\", reporter.beforeDescribe.bind(reporter));\r\n    runner.on(\"afterDescribe\", reporter.afterDescribe.bind(reporter));\r\n}\r\n// Note: using bind results in property loss, so `it` has to be re-assigned.\r\nconst itOnly = runner.it.only.bind(runner);\r\nconst describeOnly = runner.describe.only.bind(runner);\r\nconst globalFunctions = [\"it\", \"describe\", \"after\", \"afterEach\", \"before\", \"beforeEach\"];\r\nfor (const fnName of globalFunctions) {\r\n    global[fnName] = runner[fnName].bind(runner);\r\n}\r\nglobal[\"it\"][\"only\"] = itOnly;\r\nglobal[\"describe\"][\"only\"] = describeOnly;\r\nglobal[\"__testRunner\"] = runner;\r\nconst moduleResolver = new ModuleResolver(runner);\r\nPromise.all(reporters.map((reporter) => reporter.initialize()))\r\n    .then(() => moduleResolver.resolveGlob(finalConfig.input))\r\n    .then(() => {\r\n    for (const reporter of reporters) {\r\n        reporter.runStart();\r\n    }\r\n})\r\n    .then(() => runner.run())\r\n    .then((results) => {\r\n    for (const reporter of reporters) {\r\n        reporter.runEnd(results);\r\n    }\r\n})\r\n    .catch((error) => {\r\n    console.error(error);\r\n    process.exit(1);\r\n});\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN4QyxPQUFPLEtBQUssSUFBSSxNQUFNLE1BQU0sQ0FBQztBQUM3QixPQUFPLEVBQUMsVUFBVSxFQUFFLFNBQVMsRUFBQyxNQUFNLElBQUksQ0FBQztBQUN6QyxPQUFPLEVBQUMsT0FBTyxJQUFJLHVCQUF1QixFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFDdEUsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLCtCQUErQixDQUFDO0FBQ3pELE9BQU8sRUFBQyxVQUFVLEVBQWEsTUFBTSxxQkFBcUIsQ0FBQztBQUMzRCxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFFbkQsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sbUNBQW1DLENBQUM7QUFDbkUsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBQ2hELE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUNyRCxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sZ0NBQWdDLENBQUM7QUFFN0QsdUJBQXVCLEVBQUUsQ0FBQztBQUUxQixNQUFNLE1BQU0sR0FBRyxJQUFJLFVBQVUsRUFBRSxDQUFDO0FBQ2hDLE1BQU0sU0FBUyxHQUFlLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUU3QyxNQUFNLFlBQVksR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0FBQ3hDLElBQUksV0FBd0IsQ0FBQztBQUM3QixJQUFJLFVBQVUsQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLEVBQUU7SUFDbEMsTUFBTSxRQUFRLEdBQUcsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLFFBQVEs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","import { ArgumentParser } from \"argparse\";\r\nimport * as path from \"path\";\r\nclass ArgsParser {\r\n    constructor() {\r\n        this.argsParser = new ArgumentParser({\r\n            description: \"Run tests using the Umbra test framework.\"\r\n        });\r\n        this.addGeneralOptions();\r\n        this.addTimeoutOptions();\r\n        this.addReportingOptions();\r\n        this.addParallelOptions();\r\n    }\r\n    parse() {\r\n        const unprocessedArgs = this.argsParser.parseArgs();\r\n        return this.cloneNonNullValues({\r\n            input: unprocessedArgs.input[0].length > 0 ? unprocessedArgs.input[0] : undefined,\r\n            cacheDir: unprocessedArgs.cacheDir,\r\n            configPath: path.resolve(unprocessedArgs.configPath),\r\n            debug: unprocessedArgs.debug,\r\n            debugBreak: unprocessedArgs.debugBrk,\r\n            watch: unprocessedArgs.watch,\r\n            timeoutMs: this.cloneNonNullValues({\r\n                it: unprocessedArgs.timeoutMs || unprocessedArgs.itTimeoutMs,\r\n                before: unprocessedArgs.timeoutMs || unprocessedArgs.beforeTimeoutMs,\r\n                beforeEach: unprocessedArgs.timeoutMs || unprocessedArgs.beforeEachTimeoutMs,\r\n                after: unprocessedArgs.timeoutMs || unprocessedArgs.afterTimeoutMs,\r\n                afterEach: unprocessedArgs.timeoutMs || unprocessedArgs.afterEachTimeoutMs\r\n            }),\r\n            reporting: this.cloneNonNullValues({\r\n                reporters: unprocessedArgs.reporter ? [unprocessedArgs.reporter] : [],\r\n                outputPath: unprocessedArgs.outputPath\r\n            }),\r\n            parallel: this.cloneNonNullValues({\r\n                idempotentFiles: unprocessedArgs.idempotentFiles,\r\n                idempotentTests: unprocessedArgs.idempotentTests\r\n            })\r\n        });\r\n    }\r\n    // ArgsParser does not respect defaultValue of undefined -- it will instead set things to null. Not recursive.\r\n    cloneNonNullValues(object) {\r\n        const newObject = {};\r\n        for (const key of Object.keys(object)) {\r\n            const value = object[key];\r\n            if (typeof value === \"undefined\" || value == null) {\r\n                continue;\r\n            }\r\n            // boolean values are always defaulted to false, due to ArgParser behavior above.\r\n            if (typeof value === \"boolean\" && !value) {\r\n                continue;\r\n            }\r\n            newObject[key] = value;\r\n        }\r\n        return Object.keys(newObject).length > 0 ? newObject : undefined;\r\n    }\r\n    addGeneralOptions() {\r\n        this.argsParser.addArgument(\"input\", {\r\n            help: \"Files, or globs, to run with the Umbra Test Runner\",\r\n            required: false,\r\n            action: \"append\",\r\n            nargs: \"*\"\r\n        });\r\n        this.argsParser.addArgument([\"-d\", \"--debug\"], {\r\n            help: \"Enables the Node debugger\",\r\n            required: false,\r\n            action: \"storeTrue\",\r\n            dest: \"debug\"\r\n        });\r\n        this.argsParser.addArgument([\"-db\", \"--debug-brk\"], {\r\n            help: \"Enables the Node debugger, breaking once the first test is evaluated\",\r\n            required: false,\r\n            action: \"storeTrue\",\r\n            dest: \"debugBrk\"\r\n        });\r\n        this.argsParser.addArgument([\"-w\", \"--watch\"], {\r\n            help: \"Enables watch mode, which will evaluate all tests first and then again once changes occur.\",\r\n            required: false,\r\n            action: \"storeTrue\",\r\n            dest: \"watch\"\r\n        });\r\n        this.argsParser.addArgument([\"-c\", \"--config\"], {\r\n            help: \"Sets the config file path.\",\r\n            required: false,\r\n            dest: \"configPath\",\r\n            defaultValue: \"./umbra.config.ts\"\r\n        });\r\n        this.argsParser.addArgument([\"--cacheDir\"], {\r\n            help: \"The directory in which to store umbra cache files used for dynamic optimization.\",\r\n            required: false,\r\n            dest: \"cacheDir\"\r\n        });\r\n    }\r\n    addTimeoutOptions() {\r\n        this.argsParser.addArgument([\"--timeoutMs\"], {\r\n            help: \"Specifies the general asynchronous timeout value in milliseconds. This affects *all* async methods (it, before, after, etc.)\",\r\n            required: false,\r\n            dest: \"timeoutMs\"\r\n        });\r\n        for (const value of [\"it\", \"before\", \"beforeEach\", \"after\", \"afterEach\"]) {\r\n            this.argsParser.addArgument([`--${value}TimeoutMs`], {\r\n                help: `Specifies the asynchronous timeout value for \\`${value}\\` blocks in milliseconds. This overrides general settings.`,\r\n                required: false,\r\n                dest: `${value}TimeoutMs`\r\n            });\r\n        }\r\n    }\r\n    addReportingOptions() {\r\n        this.argsParser.addArgument([\"-o\", \"--outputPath\"], {\r\n            help: \"The output directory to write the final results to.\",\r\n            required: false,\r\n            dest: \"outputPath\"\r\n        });\r\n        this.argsParser.addArgument([\"-r\", \"--reporter\"], {\r\n            help: \"The reporter to use.\",\r\n            required: false,\r\n            dest: \"reporter\"\r\n        });\r\n    }\r\n    addParallelOptions() {\r\n        this.argsParser.addArgument([\"--idempotentFiles\"], {\r\n            help: \"If set, files are treated as idempotent (meaning other file execution does not affect it).\",\r\n            required: false,\r\n            action: \"storeTrue\",\r\n            dest: \"idempotentFiles\"\r\n        });\r\n        this.argsParser.addArgument([\"--idempotentTests\"], {\r\n            help: \"If set, tests are treated as idempotent (meaning other test execution does not affect it). Requires idempotent files.\",\r\n            required: false,\r\n            action: \"storeTrue\",\r\n            dest: \"idempotentTests\"\r\n        });\r\n    }\r\n}\r\nexport { ArgsParser };\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXJnc1BhcnNlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Db25maWcvQXJnc1BhcnNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sVUFBVSxDQUFDO0FBQ3hDLE9BQU8sS0FBSyxJQUFJLE1BQU0sTUFBTSxDQUFDO0FBTTdCLE1BQU0sVUFBVTtJQUdaO1FBQ0ksSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLGNBQWMsQ0FBQztZQUNqQyxXQUFXLEVBQUUsMkNBQTJDO1NBQzNELENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO1FBQzNCLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO0lBQzlCLENBQUM7SUFFRCxLQUFLO1FBQ0QsTUFBTSxlQUFlLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNwRCxPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQztZQUMzQixLQUFLLEVBQUUsZUFBZSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTO1lBQ2pGLFFBQVEsRUFBRSxlQUFlLENBQUMsUUFBUTtZQUNsQyxVQUFVLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsVUFBVSxDQUFDO1lBQ3BELEtBQUssRUFBRSxlQUFlLENBQUMsS0FBSztZQUM1QixVQUFVLEVBQUUsZUFBZSxDQUFDLFFBQVE7WUFDcEMsS0FBSyxFQUFFLGVBQWUsQ0FBQyxLQUFLO1lBQzVCLFNBQVMsRUFBRSxJQUFJLENBQUMsa0JBQWtCLENBQUM7Z0JBQy9CLEVBQUUsRUFBRSxlQUFlLENBQUMsU0FBUyxJQUFJLGVBQWUsQ0FBQyxXQUFXO2dCQUM1RCxNQUFNLEVBQUUsZUFBZSxDQUFDLFNBQVMsSUFBSSxlQUFlLENBQUMsZUFBZTtnQkFDcEUsVUFBVSxFQUFFLGVBQWUsQ0FBQyxTQUFTLElBQUksZUFBZSxDQUFDLG1CQUFtQjtnQkFDNUUsS0FBSyxFQUFFLGVBQWUsQ0FBQyxTQUFTLElBQUksZUFBZSxDQUFDLGNBQWM7Z0JBQ2xFLFNBQVMsRUFBRSxlQUFlLENBQUMsU0FBUyxJQUFJLGVBQWUsQ0FBQyxrQkFBa0I7YUFDN0UsQ0FBQztZQUNGLFNBQVMsRUFBRSxJQUFJLENBQUMsa0JBQWtCLENBQUM7Z0JBQy9CLFNBQVMsRUFBRSxlQUFlLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtnQkFDckUsVUFBVSxFQUFFLGVBQWUsQ0FBQyxVQUFVO2FBQ3pDLENBQUM7WUFDRixRQUFRLEVBQUUsSUFBSSxDQUFDLGtCQUFrQixDQUFDO2dCQUM5QixlQUFlLEVBQUUsZUFBZSxDQUFDLGVBQWU7Z0JBQ2hELGVBQWUsRUFBRSxlQUFlLENBQUMsZUFBZTthQUNuRCxDQUFDO1NBQ0wsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELDhHQUE4RztJQUN0RyxrQkFBa0IsQ0FBSSxNQUFTO1FBQ25DLE1BQU0sU0FBUyxHQUFHLEVBQUUsQ0FBQztRQUNyQixLQUFLLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDbkMsTUFBTSxLQUFLLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBRTFCLElBQUksT0FBTyxLQUFLLEtBQUssV0FBVyxJQUFJLEtBQUssSUFBSSxJQUFJLEVBQUU7Z0JBQy9DLFNBQVM7YUFDWjtZQUVELGlGQUFpRjtZQUNqRixJQUFJLE9BQU8sS0FBSyxLQUFLLFNBQVMsSUFBSSxDQUFDLEtBQUssRUFBRTtnQkFDdEMsU0FBUzthQUNaO1lBRUQsU0FBUyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQztTQUMxQjtRQUVELE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFjLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztJQUMxRSxDQUFDO0lBRU8saUJBQWlCO1FBQ3JCLElBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRTtZQUNqQyxJQUFJLEVBQUUsb0RBQW9EO1lBQzFELFFBQVEsRUFBRSxLQUFLO1lBQ2YsTUFBTSxFQUFFLFFBQVE7WUFDaEIsS0FBSyxFQUFFLEdBQUc7U0FDYixDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsRUFBRTtZQUMzQyxJQUFJLEVBQUUsMkJBQTJCO1lBQ2pDLFFBQVEsRUFBRSxLQUFLO1lBQ2YsTUFBTSxFQUFFLFdBQVc7WUFDbkIsSUFBSSxFQUFFLE9BQU87U0FDaEIsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUMsQ0FBQyxLQUFLLEVBQUUsYUFBYSxDQUFDLEVBQUU7WUFDaEQsSUFBSSxFQUFFLHNFQUFzRTtZQUM1RSxRQUFRLEVBQUUsS0FBSztZQUNmLE1BQU0sRUFBRSxXQUFXO1lBQ25CLElBQUksRUFBRSxVQUFVO1NBQ25CLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxFQUFFO1lBQzNDLElBQUksRUFBRSw0RkFBNEY7WUFDbEcsUUFBUSxFQUFFLEtBQUs7WUFDZixNQUFNLEVBQUUsV0FBVztZQUNuQixJQUFJLEVBQUUsT0FBTztTQUNoQixDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxDQUFDLElBQUksRUFBRSxVQUFVLENBQUMsRUFBRTtZQUM1QyxJQUFJLEVBQUUsNEJBQTRCO1lBQ2xDLFFBQVEsRUFBRSxLQUFLO1lBQ2YsSUFBSSxFQUFFLFlBQVk7WUFDbEIsWUFBWSxFQUFFLG1CQUFtQjtTQUNwQyxDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxDQUFDLFlBQVksQ0FBQyxFQUFFO1lBQ3hDLElBQUksRUFBRSxrRkFBa0Y7WUFDeEYsUUFBUSxFQUFFLEtBQUs7WUFDZixJQUFJLEVBQUUsVUFBVTtTQUNuQixDQUFDLENBQUM7SUFDUCxDQUFDO0lBRU8saUJBQWlCO1FBQ3JCLElBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLENBQUMsYUFBYSxDQUFDLEVBQUU7WUFDekMsSUFBSSxFQUFFLDhIQUE4SDtZQUNwSSxRQUFRLEVBQUUsS0FBSztZQUNmLElBQUksRUFBRSxXQUFXO1NBQ3BCLENBQUMsQ0FBQztRQUVILEtBQUssTUFBTSxLQUFLLElBQUksQ0FBQyxJQUFJLEVBQUUsUUFBUSxFQUFFLFlBQVksRUFBRSxPQUFPLEVBQUUsV0FBVyxDQUFDLEVBQUU7WUFDdEUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUMsQ0FBQyxLQUFLLEtBQUssV0FBVyxDQUFDLEVBQUU7Z0JBQ2pELElBQUksRUFBRSxrREFBa0QsS0FBSyw2REFBNkQ7Z0JBQzFILFFBQVEsRUFBRSxLQUFLO2dCQUNmLElBQUksRUFBRSxHQUFHLEtBQUssV0FBVzthQUM1QixDQUFDLENBQUM7U0FDTjtJQUNMLENBQUM7SUFFTyxtQkFBbUI7UUFDdkIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUMsQ0FBQyxJQUFJLEVBQUUsY0FBYyxDQUFDLEVBQUU7WUFDaEQsSUFBSSxFQUFFLHFEQUFxRDtZQUMzRCxRQUFRLEVBQUUsS0FBSztZQUNmLElBQUksRUFBRSxZQUFZO1NBQ3JCLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLENBQUMsSUFBSSxFQUFFLFlBQVksQ0FBQyxFQUFFO1lBQzlDLElBQUksRUFBRSxzQkFBc0I7WUFDNUIsUUFBUSxFQUFFLEtBQUs7WUFDZixJQUFJLEVBQUUsVUFBVTtTQUNuQixDQUFDLENBQUM7SUFDUCxDQUFDO0lBRU8sa0JBQWtCO1FBQ3RCLElBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLENBQUMsbUJBQW1CLENBQUMsRUFBRTtZQUMvQyxJQUFJLEVBQUUsNEZBQTRGO1lBQ2xHLFFBQVEsRUFBRSxLQUFLO1lBQ2YsTUFBTSxFQUFFLFdBQVc7WUFDbkIsSUFBSSxFQUFFLGlCQUFpQjtTQUMxQixDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLEVBQUU7WUFDL0MsSUFBSSxFQUFFLHVIQUF1SDtZQUM3SCxRQUFRLEVBQUUsS0FBSztZQUNmLE1BQU0sRUFBRSxXQUFXO1lBQ25CLElBQUksRUFBRSxpQkFBaUI7U0FDMUIsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztDQUVKO0FBRUQsT0FBTyxFQUFDLFVBQVUsRUFBYSxDQUFDIn0=","class ConfigMerger {\r\n    /**\r\n     * Super basic helper method for merging configurations together. Overwrites earlier configs with later ones, with\r\n     * special handling for timeoutMs, which can be either an object or a single number.\r\n     */\r\n    merge(baseConfig, ...configs) {\r\n        for (const config of configs) {\r\n            for (const attribute in config) {\r\n                if (config.hasOwnProperty(attribute)) {\r\n                    const value = config[attribute];\r\n                    if (typeof value === \"undefined\") {\r\n                        continue;\r\n                    }\r\n                    // The user has the option to set a global timeout value, rather than set them individually.\r\n                    if (attribute === \"timeoutMs\" && typeof value === \"number\") {\r\n                        baseConfig.timeoutMs = {\r\n                            it: value,\r\n                            before: value,\r\n                            beforeEach: value,\r\n                            after: value,\r\n                            afterEach: value\r\n                        };\r\n                    }\r\n                    else {\r\n                        baseConfig[attribute] = config[attribute];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return baseConfig;\r\n    }\r\n}\r\nexport { ConfigMerger };\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uZmlnTWVyZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL0NvbmZpZy9Db25maWdNZXJnZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxZQUFZO0lBRWQ7OztPQUdHO0lBQ0gsS0FBSyxDQUFDLFVBQXVCLEVBQUUsR0FBRyxPQUErQjtRQUM3RCxLQUFLLE1BQU0sTUFBTSxJQUFJLE9BQU8sRUFBRTtZQUMxQixLQUFLLE1BQU0sU0FBUyxJQUFJLE1BQU0sRUFBRTtnQkFDNUIsSUFBSSxNQUFNLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQyxFQUFFO29CQUNsQyxNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7b0JBQ2hDLElBQUksT0FBTyxLQUFLLEtBQUssV0FBVyxFQUFFO3dCQUM5QixTQUFTO3FCQUNaO29CQUVELDRGQUE0RjtvQkFDNUYsSUFBSSxTQUFTLEtBQUssV0FBVyxJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsRUFBRTt3QkFDeEQsVUFBVSxDQUFDLFNBQVMsR0FBRzs0QkFDbkIsRUFBRSxFQUFFLEtBQUs7NEJBQ1QsTUFBTSxFQUFFLEtBQUs7NEJBQ2IsVUFBVSxFQUFFLEtBQUs7NEJBQ2pCLEtBQUssRUFBRSxLQUFLOzRCQUNaLFNBQVMsRUFBRSxLQUFLO3lCQUNuQixDQUFDO3FCQUNMO3lCQUFNO3dCQUNILFVBQVUsQ0FBQyxTQUFTLENBQUMsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7cUJBQzdDO2lCQUNKO2FBQ0o7U0FDSjtRQUVELE9BQU8sVUFBVSxDQUFDO0lBQ3RCLENBQUM7Q0FDSjtBQUVELE9BQU8sRUFBQyxZQUFZLEVBQUMsQ0FBQyJ9","import fastGlob from \"fast-glob\";\r\nimport * as path from \"path\";\r\nclass ModuleResolver {\r\n    constructor(testRunner) {\r\n        this.testRunner = testRunner;\r\n    }\r\n    /**\r\n     * A helper method which will resolve modules matching the input glob.\r\n     * @param inputGlobs\r\n     * @return a promise which will be resolved when all modules are.\r\n     */\r\n    resolveGlob(inputGlobs) {\r\n        return fastGlob(inputGlobs)\r\n            .then((resolvedEntries) => {\r\n            for (const entry of resolvedEntries) {\r\n                const resolvedPath = path.resolve(entry.toString());\r\n                this.testRunner.setCurrentFile(resolvedPath);\r\n                require(resolvedPath);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport { ModuleResolver };\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTW9kdWxlUmVzb2x2ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvTW9kdWxlUmVzb2x2ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxRQUFRLE1BQU0sV0FBVyxDQUFDO0FBQ2pDLE9BQU8sS0FBSyxJQUFJLE1BQU0sTUFBTSxDQUFDO0FBRzdCLE1BQU0sY0FBYztJQUloQixZQUFZLFVBQXNCO1FBQzlCLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO0lBQ2pDLENBQUM7SUFFRDs7OztPQUlHO0lBQ0ksV0FBVyxDQUFDLFVBQW9CO1FBQ25DLE9BQU8sUUFBUSxDQUFDLFVBQVUsQ0FBQzthQUN0QixJQUFJLENBQUMsQ0FBQyxlQUFlLEVBQUUsRUFBRTtZQUN0QixLQUFLLE1BQU0sS0FBSyxJQUFJLGVBQWUsRUFBRTtnQkFDakMsTUFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztnQkFDcEQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLENBQUM7Z0JBQzdDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQzthQUN6QjtRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ1gsQ0FBQztDQUNKO0FBRUQsT0FBTyxFQUFDLGNBQWMsRUFBQyxDQUFDIn0="],"names":["TestResult","WriteStreamInterceptor","[object Object]","this","started","streamToIntercept","onWrite","Error","originalStreamWrite","write","string","processedText","writeDirect","text","apply","BaseReporter","currentIndentLevel","passes","failures","pending","console","log","chalk","whiteBright","drawHorizontalLine","Promise","resolve","absolutePath","activeFilePath","title","elapsedMs","results","error","timeoutMs","i","process","stdout","columns","offset","str","BasicReporter","super","arguments","verboseMode","filesEvaluated","beforeDescribe","getIndentedText","cyan","beforeTest","testFail","redBright","printPrettyStackTrace","testTimeout","testSuccess","red","totalFailures","yellow","totalTimeouts","green","totalSuccesses","elapsedTimeMs","message","StockReporterMap","basic","fancy","stdOutInterceptor","stdErrInterceptor","timer","spinnerIndex","spinnerIcons","onProcessLog","start","stderr","writeLine","white","startSpinner","stop","stopSpinner","FAIL","prettyStack","createCallsiteRecord","forError","renderSync","frameSize","TIMEOUT","SKIPPED","testSkipped","SUCCESS","ansiEscapes","cursorLeft","cursorForward","setInterval","cursorBackward","length","result","clearInterval","greenBright","cursorNextLine","DefaultConfig","input","debug","debugBreak","watch","cacheDir","it","before","beforeEach","after","afterEach","reporting","outputPath","undefined","reporters","parallel","idempotentFiles","idempotentTests","installSourceMapSupport","argConfig","argsParser","ArgumentParser","description","addGeneralOptions","addTimeoutOptions","addReportingOptions","addParallelOptions","unprocessedArgs","parseArgs","cloneNonNullValues","configPath","path.resolve","debugBrk","itTimeoutMs","beforeTimeoutMs","beforeEachTimeoutMs","afterTimeoutMs","afterEachTimeoutMs","reporter","object","newObject","key","Object","keys","value","addArgument","help","required","action","nargs","dest","defaultValue","parse","configMerger","baseConfig","configs","config","attribute","hasOwnProperty","finalConfig","existsSync","mkdirSync","finalPath","path.extname","spawnSync","stdio","fileConfig","require","merge","runner","TestRunner","stopOnFirstFail","reporterNames","map","name","e","on","activeFileChanged","bind","afterDescribe","itOnly","only","describeOnly","describe","globalFunctions","fnName","global","moduleResolver","testRunner","inputGlobs","fastGlob","then","resolvedEntries","entry","resolvedPath","toString","setCurrentFile","all","initialize","resolveGlob","runStart","run","runEnd","catch","exit"],"mappings":"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"}