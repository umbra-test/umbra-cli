{"version":3,"file":"index.cjs.js","sources":["Reporter/Stock/FancyReporter.js","WriteStreamInterceptor.js","Reporter/Stock/StockReporterMap.js","Config/DefaultConfig.js","index.js","Config/ArgsParser.js","Config/ConfigMerger.js","ModuleResolver.js"],"sourcesContent":["import chalk from \"chalk\";\r\nimport ansiEscapes from \"ansi-escapes\";\r\nimport { WriteStreamInterceptor } from \"../../WriteStreamInterceptor\";\r\nimport createCallsiteRecord from \"callsite-record\";\r\nvar TestResult;\r\n(function (TestResult) {\r\n    TestResult[TestResult[\"SUCCESS\"] = 0] = \"SUCCESS\";\r\n    TestResult[TestResult[\"FAIL\"] = 1] = \"FAIL\";\r\n    TestResult[TestResult[\"SKIPPED\"] = 2] = \"SKIPPED\";\r\n    TestResult[TestResult[\"TIMEOUT\"] = 3] = \"TIMEOUT\";\r\n})(TestResult || (TestResult = {}));\r\n/**\r\n * A port of Mocha's nyan reporter, for obvious reasons.\r\n */\r\nclass FancyReporter {\r\n    constructor(stdOutInterceptor = new WriteStreamInterceptor(), stdErrInterceptor = new WriteStreamInterceptor()) {\r\n        this.timer = null;\r\n        this.currentIndentLevel = 0;\r\n        this.lines = [];\r\n        this.spinnerIndex = 0;\r\n        this.spinnerIcons = [\"‚ó¥\", \"‚ó∑\", \"‚ó∂\", \"‚óµ\"]; //[\"üåë\", \"üåí\", \"üåì\", \"üåî\", \"üåï\", \"üåù\", \"üåñ\", \"üåó\", \"üåò\", \"üåö\"];\r\n        this.activeFileChanged = (absolutePath) => {\r\n            this.activeFilePath = absolutePath;\r\n            this.lines.push(chalk.cyan(\">>\") + ` ${this.activeFilePath}`);\r\n        };\r\n        this.afterDescribe = (title, elapsedMs) => {\r\n            this.currentIndentLevel--;\r\n        };\r\n        this.beforeDescribe = (title) => {\r\n            this.writeLine(this.getIndentedText(chalk.cyan(\"‚§∑\") + ` ${title}`));\r\n            this.currentIndentLevel++;\r\n        };\r\n        this.beforeTest = (title) => {\r\n            this.startSpinner(title);\r\n            this.pending++;\r\n            this.currentIndentLevel++;\r\n        };\r\n        this.runEnd = (results) => {\r\n            this.stdOutInterceptor.writeDirect(\"\\u001B[?25h\");\r\n            this.stdOutInterceptor.stop();\r\n            this.stdErrInterceptor.stop();\r\n        };\r\n        this.runStart = () => {\r\n        };\r\n        this.testFail = (title, error, elapsedMs) => {\r\n            this.stopSpinner(TestResult.FAIL);\r\n            const prettyStack = createCallsiteRecord({ forError: error }).renderSync({\r\n                /* TODO: Determine whether to default node_module stripping to true\r\n                stackFilter(frame) {\r\n                    return !frame.fileName.includes(\"node_modules\");\r\n                },\r\n                 */\r\n                frameSize: 3\r\n            });\r\n            this.stdErrInterceptor.writeDirect(prettyStack + \"\\n\\n\");\r\n            this.pending--;\r\n            this.failures++;\r\n            this.currentIndentLevel--;\r\n        };\r\n        this.testTimeout = (title, elapsedMs, timeoutMs) => {\r\n            this.stopSpinner(TestResult.TIMEOUT);\r\n            this.pending--;\r\n            this.failures++;\r\n            this.currentIndentLevel--;\r\n        };\r\n        this.testSkipped = (title) => {\r\n            this.stopSpinner(TestResult.SKIPPED);\r\n            this.pending--;\r\n            this.currentIndentLevel--;\r\n        };\r\n        this.testSuccess = (title, elapsedMs) => {\r\n            this.stopSpinner(TestResult.SUCCESS);\r\n            this.pending--;\r\n            this.passes++;\r\n            this.currentIndentLevel--;\r\n        };\r\n        this.passes = 0;\r\n        this.failures = 0;\r\n        this.pending = 0;\r\n        this.onProcessLog = (text) => {\r\n            //return text;\r\n        };\r\n        this.stdOutInterceptor = stdOutInterceptor;\r\n        this.stdErrInterceptor = stdErrInterceptor;\r\n    }\r\n    initialize() {\r\n        this.stdOutInterceptor.start(process.stdout, this.onProcessLog);\r\n        this.stdErrInterceptor.start(process.stderr, this.onProcessLog);\r\n        this.stdOutInterceptor.writeDirect(\"\\u001B[?25l\");\r\n        this.writeLine(`\\n${chalk.whiteBright(\"‚òæ\")} Umbra Test`);\r\n        this.writeLine(chalk.white(`‚§∑ All logs will be intercepted and written to a local file.`));\r\n        this.drawHorizontalLine();\r\n        return Promise.resolve();\r\n    }\r\n    drawHorizontalLine() {\r\n        for (let i = 0; i < process.stdout.columns; i++) {\r\n            this.stdOutInterceptor.writeDirect(\"\\u2500\");\r\n        }\r\n        this.stdOutInterceptor.writeDirect(\"\\n\");\r\n    }\r\n    writeLine(text) {\r\n        this.stdOutInterceptor.writeDirect(text + \"\\n\");\r\n    }\r\n    startSpinner(text) {\r\n        this.stdOutInterceptor.writeDirect(this.getIndentedText(chalk.yellow(this.spinnerIcons[this.spinnerIndex]) + \" \" + text));\r\n        this.stdOutInterceptor.writeDirect(ansiEscapes.cursorLeft);\r\n        this.stdOutInterceptor.writeDirect(ansiEscapes.cursorForward(this.currentIndentLevel + 1));\r\n        this.timer = setInterval(() => {\r\n            this.stdOutInterceptor.writeDirect(ansiEscapes.cursorBackward(1));\r\n            this.spinnerIndex = (this.spinnerIndex + 1) % (this.spinnerIcons.length - 1);\r\n            this.stdOutInterceptor.writeDirect(chalk.yellow(this.spinnerIcons[this.spinnerIndex]));\r\n        }, 200);\r\n    }\r\n    stopSpinner(result) {\r\n        clearInterval(this.timer);\r\n        this.stdOutInterceptor.writeDirect(ansiEscapes.cursorBackward(1));\r\n        if (result === TestResult.FAIL) {\r\n            this.stdOutInterceptor.writeDirect(chalk.redBright(\"‚úò\"));\r\n        }\r\n        else if (result === TestResult.SUCCESS) {\r\n            this.stdOutInterceptor.writeDirect(chalk.greenBright(\"‚úì\"));\r\n        }\r\n        else if (result === TestResult.TIMEOUT) {\r\n            this.stdOutInterceptor.writeDirect(chalk.redBright(\"‚è≤\"));\r\n        }\r\n        this.stdOutInterceptor.writeDirect(ansiEscapes.cursorNextLine);\r\n        this.stdOutInterceptor.writeDirect(\"\\n\");\r\n    }\r\n    getIndentedText(text) {\r\n        let str = \"\";\r\n        for (let i = 0; i < this.currentIndentLevel; i++) {\r\n            str += \" \";\r\n        }\r\n        return str + text;\r\n    }\r\n}\r\nexport { FancyReporter };\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmFuY3lSZXBvcnRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9SZXBvcnRlci9TdG9jay9GYW5jeVJlcG9ydGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE9BQU8sS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUMxQixPQUFPLFdBQVcsTUFBTSxjQUFjLENBQUM7QUFDdkMsT0FBTyxFQUFDLHNCQUFzQixFQUFDLE1BQU0sOEJBQThCLENBQUM7QUFDcEUsT0FBTyxvQkFBb0IsTUFBTSxpQkFBaUIsQ0FBQztBQUduRCxJQUFLLFVBS0o7QUFMRCxXQUFLLFVBQVU7SUFDWCxpREFBTyxDQUFBO0lBQ1AsMkNBQUksQ0FBQTtJQUNKLGlEQUFPLENBQUE7SUFDUCxpREFBTyxDQUFBO0FBQ1gsQ0FBQyxFQUxJLFVBQVUsS0FBVixVQUFVLFFBS2Q7QUFFRDs7R0FFRztBQUNILE1BQU0sYUFBYTtJQWVmLFlBQVksaUJBQWlCLEdBQUcsSUFBSSxzQkFBc0IsRUFBRSxFQUNoRCxpQkFBaUIsR0FBRyxJQUFJLHNCQUFzQixFQUFFO1FBWHBELFVBQUssR0FBbUIsSUFBSSxDQUFDO1FBRzdCLHVCQUFrQixHQUFHLENBQUMsQ0FBQztRQUN2QixVQUFLLEdBQWEsRUFBRSxDQUFDO1FBRXJCLGlCQUFZLEdBQUcsQ0FBQyxDQUFDO1FBRWpCLGlCQUFZLEdBQUcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLCtEQUErRDtRQW9CNUcsc0JBQWlCLEdBQUcsQ0FBQyxZQUFvQixFQUFFLEVBQUU7WUFDekMsSUFBSSxDQUFDLGNBQWMsR0FBRyxZQUFZLENBQUM7WUFDbkMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQyxDQUFDO1FBQ2xFLENBQUMsQ0FBQztRQUVGLGtC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","/**\r\n * Manages interception of NodeJS WriteStreams, such as stdout. Allows consumers to listen and/or fully intercept\r\n * write to the stream.\r\n */\r\nclass WriteStreamInterceptor {\r\n    constructor() {\r\n        this.started = false;\r\n    }\r\n    /**\r\n     * Starts the stream interceptor. If passthrough is set to true, then logs will continue to be written to the stream.\r\n     */\r\n    start(streamToIntercept, onWrite) {\r\n        if (this.started) {\r\n            throw new Error(\"WriteStreamInterceptor has already been started!\");\r\n        }\r\n        this.started = true;\r\n        this.streamToIntercept = streamToIntercept;\r\n        this.originalStreamWrite = this.streamToIntercept.write;\r\n        this.streamToIntercept.write = (string) => {\r\n            const processedText = onWrite(string);\r\n            if (typeof processedText === \"string\") {\r\n                this.writeDirect(processedText);\r\n            }\r\n            return true;\r\n        };\r\n    }\r\n    stop() {\r\n        if (!this.started) {\r\n            throw new Error(\"WriteStreamInterceptor has not been started!\");\r\n        }\r\n        this.streamToIntercept.write = this.originalStreamWrite;\r\n        this.started = false;\r\n    }\r\n    /**\r\n     * Writes directly to the underlying WriteStream.\r\n     *\r\n     * @param text\r\n     */\r\n    writeDirect(text) {\r\n        if (!this.started) {\r\n            throw new Error(\"WriteStreamInterceptor has not been started!\");\r\n        }\r\n        this.originalStreamWrite.apply(this.streamToIntercept, [text]);\r\n    }\r\n}\r\nexport { WriteStreamInterceptor };\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV3JpdGVTdHJlYW1JbnRlcmNlcHRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9Xcml0ZVN0cmVhbUludGVyY2VwdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRztBQUNILE1BQU0sc0JBQXNCO0lBQTVCO1FBRVksWUFBTyxHQUFZLEtBQUssQ0FBQztJQTZDckMsQ0FBQztJQXpDRzs7T0FFRztJQUNILEtBQUssQ0FBQyxpQkFBcUMsRUFBRSxPQUF3QztRQUNqRixJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDZCxNQUFNLElBQUksS0FBSyxDQUFDLGtEQUFrRCxDQUFDLENBQUM7U0FDdkU7UUFDRCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztRQUNwQixJQUFJLENBQUMsaUJBQWlCLEdBQUcsaUJBQWlCLENBQUM7UUFDM0MsSUFBSSxDQUFDLG1CQUFtQixHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxLQUFLLENBQUM7UUFFeEQsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEtBQUssR0FBRyxDQUFDLE1BQU0sRUFBRSxFQUFFO1lBQ3RDLE1BQU0sYUFBYSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUN0QyxJQUFJLE9BQU8sYUFBYSxLQUFLLFFBQVEsRUFBRTtnQkFDbkMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsQ0FBQzthQUNuQztZQUNELE9BQU8sSUFBSSxDQUFDO1FBQ2hCLENBQUMsQ0FBQztJQUNOLENBQUM7SUFFRCxJQUFJO1FBQ0EsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDZixNQUFNLElBQUksS0FBSyxDQUFDLDhDQUE4QyxDQUFDLENBQUM7U0FDbkU7UUFFRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxtQkFBbUIsQ0FBQztRQUN4RCxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztJQUN6QixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILFdBQVcsQ0FBQyxJQUFZO1FBQ3BCLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ2YsTUFBTSxJQUFJLEtBQUssQ0FBQyw4Q0FBOEMsQ0FBQyxDQUFDO1NBQ25FO1FBRUQsSUFBSSxDQUFDLG1CQUFtQixDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ25FLENBQUM7Q0FDSjtBQUVELE9BQU8sRUFBQyxzQkFBc0IsRUFBQyxDQUFDIn0=","import { FancyReporter } from \"./FancyReporter\";\r\nconst StockReporterMap = {\r\n    \"fancy\": FancyReporter\r\n};\r\nexport { StockReporterMap };\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3RvY2tSZXBvcnRlck1hcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9SZXBvcnRlci9TdG9jay9TdG9ja1JlcG9ydGVyTWFwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUU5QyxNQUFNLGdCQUFnQixHQUFHO0lBQ3JCLE9BQU8sRUFBRSxhQUFhO0NBQ3pCLENBQUM7QUFFRixPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsQ0FBQyJ9","const DEFAULT_TIMEOUT_MS = 100;\r\nconst DefaultConfig = {\r\n    input: [],\r\n    debug: false,\r\n    debugBreak: false,\r\n    watch: false,\r\n    cacheDir: \".umbra-cache\",\r\n    timeoutMs: {\r\n        it: DEFAULT_TIMEOUT_MS,\r\n        before: DEFAULT_TIMEOUT_MS,\r\n        beforeEach: DEFAULT_TIMEOUT_MS,\r\n        after: DEFAULT_TIMEOUT_MS,\r\n        afterEach: DEFAULT_TIMEOUT_MS\r\n    },\r\n    reporting: {\r\n        outputPath: undefined,\r\n        reporters: []\r\n    },\r\n    parallel: {\r\n        idempotentFiles: false,\r\n        idempotentTests: false,\r\n    }\r\n};\r\nexport { DefaultConfig };\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGVmYXVsdENvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Db25maWcvRGVmYXVsdENvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLGtCQUFrQixHQUFHLEdBQUcsQ0FBQztBQUUvQixNQUFNLGFBQWEsR0FBZ0I7SUFDL0IsS0FBSyxFQUFFLEVBQUU7SUFDVCxLQUFLLEVBQUUsS0FBSztJQUNaLFVBQVUsRUFBRSxLQUFLO0lBQ2pCLEtBQUssRUFBRSxLQUFLO0lBQ1osUUFBUSxFQUFFLGNBQWM7SUFDeEIsU0FBUyxFQUFFO1FBQ1AsRUFBRSxFQUFFLGtCQUFrQjtRQUN0QixNQUFNLEVBQUUsa0JBQWtCO1FBQzFCLFVBQVUsRUFBRSxrQkFBa0I7UUFDOUIsS0FBSyxFQUFFLGtCQUFrQjtRQUN6QixTQUFTLEVBQUUsa0JBQWtCO0tBQ2hDO0lBQ0QsU0FBUyxFQUFFO1FBQ1AsVUFBVSxFQUFFLFNBQVM7UUFDckIsU0FBUyxFQUFFLEVBQUU7S0FDaEI7SUFDRCxRQUFRLEVBQUU7UUFDTixlQUFlLEVBQUUsS0FBSztRQUN0QixlQUFlLEVBQUUsS0FBSztLQUN6QjtDQUNKLENBQUM7QUFFRixPQUFPLEVBQUMsYUFBYSxFQUFDLENBQUMifQ==","import { spawnSync } from \"child_process\";\r\nimport * as path from \"path\";\r\nimport { existsSync, mkdirSync } from \"fs\";\r\nimport { TestRunner } from \"@umbra-test/umbra-test-runner\";\r\nimport { ArgsParser } from \"./Config/ArgsParser\";\r\nimport { ConfigMerger } from \"./Config/ConfigMerger\";\r\nimport { StockReporterMap } from \"./Reporter/Stock/StockReporterMap\";\r\nimport { ModuleResolver } from \"./ModuleResolver\";\r\nimport { DefaultConfig } from \"./Config/DefaultConfig\";\r\nimport { FancyReporter } from \"./Reporter/Stock/FancyReporter\";\r\nconst parser = new ArgsParser();\r\nconst argConfig = parser.parse();\r\nconst configMerger = new ConfigMerger();\r\nlet finalConfig;\r\nif (existsSync(argConfig.configPath)) {\r\n    const cacheDir = argConfig.cacheDir ? argConfig.cacheDir : DefaultConfig.cacheDir;\r\n    if (!existsSync(cacheDir)) {\r\n        mkdirSync(cacheDir);\r\n    }\r\n    let finalPath = argConfig.configPath;\r\n    if (path.extname(argConfig.configPath) === \"ts\") {\r\n        finalPath = path.resolve(cacheDir, \"config.js\");\r\n        spawnSync(\"tsc\", [\"--outFile\", finalPath, argConfig.configPath], { stdio: \"inherit\" });\r\n    }\r\n    const fileConfig = require(finalPath);\r\n    finalConfig = configMerger.merge(DefaultConfig, fileConfig, argConfig);\r\n}\r\nelse {\r\n    finalConfig = configMerger.merge(DefaultConfig, argConfig);\r\n}\r\nconst runner = new TestRunner({\r\n    timeoutMs: finalConfig.timeoutMs,\r\n    stopOnFirstFail: false\r\n});\r\nconst reporterNames = finalConfig.reporting.reporters;\r\nlet reporters;\r\nif (reporterNames.length === 0) {\r\n    reporters = [new FancyReporter()];\r\n}\r\nelse {\r\n    reporters = reporterNames.map((name) => {\r\n        try {\r\n            return require(name);\r\n        }\r\n        catch (e) {\r\n            if (StockReporterMap[name]) {\r\n                return new StockReporterMap[name]();\r\n            }\r\n            throw new Error(`Unable to load reporter: ${name}`);\r\n        }\r\n    });\r\n}\r\nfor (const reporter of reporters) {\r\n    runner.on(\"activeFileChanged\", reporter.activeFileChanged);\r\n    runner.on(\"beforeTest\", reporter.beforeTest);\r\n    runner.on(\"testSuccess\", reporter.testSuccess);\r\n    runner.on(\"testFail\", reporter.testFail);\r\n    runner.on(\"testTimeout\", reporter.testTimeout);\r\n    runner.on(\"beforeDescribe\", reporter.beforeDescribe);\r\n    runner.on(\"afterDescribe\", reporter.afterDescribe);\r\n}\r\nconst globalFunctions = [\"it\", \"describe\", \"after\", \"afterEach\", \"before\", \"beforeEach\"];\r\nfor (const fnName of globalFunctions) {\r\n    global[fnName] = runner[fnName];\r\n}\r\nglobal[\"__testRunner\"] = runner;\r\nconst moduleResolver = new ModuleResolver(runner);\r\nPromise.all(reporters.map((reporter) => reporter.initialize()))\r\n    .then(() => moduleResolver.resolveGlob(finalConfig.input))\r\n    .then(() => {\r\n    for (const reporter of reporters) {\r\n        reporter.runStart();\r\n    }\r\n})\r\n    .then(() => runner.run())\r\n    .then((results) => {\r\n    for (const reporter of reporters) {\r\n        reporter.runEnd(results);\r\n    }\r\n})\r\n    .catch((error) => {\r\n    console.error(error);\r\n    process.exit(1);\r\n});\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN4QyxPQUFPLEtBQUssSUFBSSxNQUFNLE1BQU0sQ0FBQztBQUM3QixPQUFPLEVBQUMsVUFBVSxFQUFFLFNBQVMsRUFBQyxNQUFNLElBQUksQ0FBQztBQUN6QyxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sK0JBQStCLENBQUM7QUFDekQsT0FBTyxFQUFDLFVBQVUsRUFBYSxNQUFNLHFCQUFxQixDQUFDO0FBQzNELE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUVuRCxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxtQ0FBbUMsQ0FBQztBQUNuRSxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sa0JBQWtCLENBQUM7QUFDaEQsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBQ3JELE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxnQ0FBZ0MsQ0FBQztBQUU3RCxNQUFNLE1BQU0sR0FBRyxJQUFJLFVBQVUsRUFBRSxDQUFDO0FBQ2hDLE1BQU0sU0FBUyxHQUFlLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUU3QyxNQUFNLFlBQVksR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0FBQ3hDLElBQUksV0FBd0IsQ0FBQztBQUM3QixJQUFJLFVBQVUsQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLEVBQUU7SUFDbEMsTUFBTSxRQUFRLEdBQUcsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQztJQUNsRixJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxFQUFFO1FBQ3ZCLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQztL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","import { ArgumentParser } from \"argparse\";\r\nimport * as path from \"path\";\r\nclass ArgsParser {\r\n    constructor() {\r\n        this.argsParser = new ArgumentParser({\r\n            description: \"Run tests using the Umbra test framework.\"\r\n        });\r\n        this.addGeneralOptions();\r\n        this.addTimeoutOptions();\r\n        this.addReportingOptions();\r\n        this.addParallelOptions();\r\n    }\r\n    parse() {\r\n        const unprocessedArgs = this.argsParser.parseArgs();\r\n        return this.cloneNonNullValues({\r\n            input: unprocessedArgs.input[0].length > 0 ? unprocessedArgs.input[0] : undefined,\r\n            cacheDir: unprocessedArgs.cacheDir,\r\n            configPath: path.resolve(unprocessedArgs.configPath),\r\n            debug: unprocessedArgs.debug,\r\n            debugBreak: unprocessedArgs.debugBrk,\r\n            watch: unprocessedArgs.watch,\r\n            timeoutMs: this.cloneNonNullValues({\r\n                it: unprocessedArgs.timeoutMs || unprocessedArgs.itTimeoutMs,\r\n                before: unprocessedArgs.timeoutMs || unprocessedArgs.beforeTimeoutMs,\r\n                beforeEach: unprocessedArgs.timeoutMs || unprocessedArgs.beforeEachTimeoutMs,\r\n                after: unprocessedArgs.timeoutMs || unprocessedArgs.afterTimeoutMs,\r\n                afterEach: unprocessedArgs.timeoutMs || unprocessedArgs.afterEachTimeoutMs\r\n            }),\r\n            reporting: this.cloneNonNullValues({\r\n                reporters: unprocessedArgs.reporter ? [unprocessedArgs.reporter] : [],\r\n                outputPath: unprocessedArgs.outputPath\r\n            }),\r\n            parallel: this.cloneNonNullValues({\r\n                idempotentFiles: unprocessedArgs.idempotentFiles,\r\n                idempotentTests: unprocessedArgs.idempotentTests\r\n            })\r\n        });\r\n    }\r\n    // ArgsParser does not respect defaultValue of undefined -- it will instead set things to null. Not recursive.\r\n    cloneNonNullValues(object) {\r\n        const newObject = {};\r\n        for (const key of Object.keys(object)) {\r\n            const value = object[key];\r\n            if (typeof value === \"undefined\" || value == null) {\r\n                continue;\r\n            }\r\n            // boolean values are always defaulted to false, due to ArgParser behavior above.\r\n            if (typeof value === \"boolean\" && !value) {\r\n                continue;\r\n            }\r\n            newObject[key] = value;\r\n        }\r\n        return Object.keys(newObject).length > 0 ? newObject : undefined;\r\n    }\r\n    addGeneralOptions() {\r\n        this.argsParser.addArgument(\"input\", {\r\n            help: \"Files, or globs, to run with the Umbra Test Runner\",\r\n            required: false,\r\n            action: \"append\",\r\n            nargs: \"*\"\r\n        });\r\n        this.argsParser.addArgument([\"-d\", \"--debug\"], {\r\n            help: \"Enables the Node debugger\",\r\n            required: false,\r\n            action: \"storeTrue\",\r\n            dest: \"debug\"\r\n        });\r\n        this.argsParser.addArgument([\"-db\", \"--debug-brk\"], {\r\n            help: \"Enables the Node debugger, breaking once the first test is evaluated\",\r\n            required: false,\r\n            action: \"storeTrue\",\r\n            dest: \"debugBrk\"\r\n        });\r\n        this.argsParser.addArgument([\"-w\", \"--watch\"], {\r\n            help: \"Enables watch mode, which will evaluate all tests first and then again once changes occur.\",\r\n            required: false,\r\n            action: \"storeTrue\",\r\n            dest: \"watch\"\r\n        });\r\n        this.argsParser.addArgument([\"-c\", \"--config\"], {\r\n            help: \"Sets the config file path.\",\r\n            required: false,\r\n            dest: \"configPath\",\r\n            defaultValue: \"./umbra.config.ts\"\r\n        });\r\n        this.argsParser.addArgument([\"--cacheDir\"], {\r\n            help: \"The directory in which to store umbra cache files used for dynamic optimization.\",\r\n            required: false,\r\n            dest: \"cacheDir\"\r\n        });\r\n    }\r\n    addTimeoutOptions() {\r\n        this.argsParser.addArgument([\"--timeoutMs\"], {\r\n            help: \"Specifies the general asynchronous timeout value in milliseconds. This affects *all* async methods (it, before, after, etc.)\",\r\n            required: false,\r\n            dest: \"timeoutMs\"\r\n        });\r\n        for (const value of [\"it\", \"before\", \"beforeEach\", \"after\", \"afterEach\"]) {\r\n            this.argsParser.addArgument([`--${value}TimeoutMs`], {\r\n                help: `Specifies the asynchronous timeout value for \\`${value}\\` blocks in milliseconds. This overrides general settings.`,\r\n                required: false,\r\n                dest: `${value}TimeoutMs`\r\n            });\r\n        }\r\n    }\r\n    addReportingOptions() {\r\n        this.argsParser.addArgument([\"-o\", \"--outputPath\"], {\r\n            help: \"The output directory to write the final results to.\",\r\n            required: false,\r\n            dest: \"outputPath\"\r\n        });\r\n        this.argsParser.addArgument([\"-r\", \"--reporter\"], {\r\n            help: \"The reporter to use.\",\r\n            required: false,\r\n            dest: \"reporter\"\r\n        });\r\n    }\r\n    addParallelOptions() {\r\n        this.argsParser.addArgument([\"--idempotentFiles\"], {\r\n            help: \"If set, files are treated as idempotent (meaning other file execution does not affect it).\",\r\n            required: false,\r\n            action: \"storeTrue\",\r\n            dest: \"idempotentFiles\"\r\n        });\r\n        this.argsParser.addArgument([\"--idempotentTests\"], {\r\n            help: \"If set, tests are treated as idempotent (meaning other test execution does not affect it). Requires idempotent files.\",\r\n            required: false,\r\n            action: \"storeTrue\",\r\n            dest: \"idempotentTests\"\r\n        });\r\n    }\r\n}\r\nexport { ArgsParser };\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXJnc1BhcnNlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Db25maWcvQXJnc1BhcnNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sVUFBVSxDQUFDO0FBQ3hDLE9BQU8sS0FBSyxJQUFJLE1BQU0sTUFBTSxDQUFDO0FBTTdCLE1BQU0sVUFBVTtJQUdaO1FBQ0ksSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLGNBQWMsQ0FBQztZQUNqQyxXQUFXLEVBQUUsMkNBQTJDO1NBQzNELENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO1FBQzNCLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO0lBQzlCLENBQUM7SUFFRCxLQUFLO1FBQ0QsTUFBTSxlQUFlLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNwRCxPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQztZQUMzQixLQUFLLEVBQUUsZUFBZSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTO1lBQ2pGLFFBQVEsRUFBRSxlQUFlLENBQUMsUUFBUTtZQUNsQyxVQUFVLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsVUFBVSxDQUFDO1lBQ3BELEtBQUssRUFBRSxlQUFlLENBQUMsS0FBSztZQUM1QixVQUFVLEVBQUUsZUFBZSxDQUFDLFFBQVE7WUFDcEMsS0FBSyxFQUFFLGVBQWUsQ0FBQyxLQUFLO1lBQzVCLFNBQVMsRUFBRSxJQUFJLENBQUMsa0JBQWtCLENBQUM7Z0JBQy9CLEVBQUUsRUFB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","class ConfigMerger {\r\n    /**\r\n     * Super basic helper method for merging configurations together. Overwrites earlier configs with later ones, with\r\n     * special handling for timeoutMs, which can be either an object or a single number.\r\n     */\r\n    merge(baseConfig, ...configs) {\r\n        for (const config of configs) {\r\n            for (const attribute in config) {\r\n                if (config.hasOwnProperty(attribute)) {\r\n                    const value = config[attribute];\r\n                    if (typeof value === \"undefined\") {\r\n                        continue;\r\n                    }\r\n                    // The user has the option to set a global timeout value, rather than set them individually.\r\n                    if (attribute === \"timeoutMs\" && typeof value === \"number\") {\r\n                        baseConfig.timeoutMs = {\r\n                            it: value,\r\n                            before: value,\r\n                            beforeEach: value,\r\n                            after: value,\r\n                            afterEach: value\r\n                        };\r\n                    }\r\n                    else {\r\n                        baseConfig[attribute] = config[attribute];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return baseConfig;\r\n    }\r\n}\r\nexport { ConfigMerger };\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uZmlnTWVyZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL0NvbmZpZy9Db25maWdNZXJnZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxZQUFZO0lBRWQ7OztPQUdHO0lBQ0gsS0FBSyxDQUFDLFVBQXVCLEVBQUUsR0FBRyxPQUErQjtRQUM3RCxLQUFLLE1BQU0sTUFBTSxJQUFJLE9BQU8sRUFBRTtZQUMxQixLQUFLLE1BQU0sU0FBUyxJQUFJLE1BQU0sRUFBRTtnQkFDNUIsSUFBSSxNQUFNLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQyxFQUFFO29CQUNsQyxNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7b0JBQ2hDLElBQUksT0FBTyxLQUFLLEtBQUssV0FBVyxFQUFFO3dCQUM5QixTQUFTO3FCQUNaO29CQUVELDRGQUE0RjtvQkFDNUYsSUFBSSxTQUFTLEtBQUssV0FBVyxJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsRUFBRTt3QkFDeEQsVUFBVSxDQUFDLFNBQVMsR0FBRzs0QkFDbkIsRUFBRSxFQUFFLEtBQUs7NEJBQ1QsTUFBTSxFQUFFLEtBQUs7NEJBQ2IsVUFBVSxFQUFFLEtBQUs7NEJBQ2pCLEtBQUssRUFBRSxLQUFLOzRCQUNaLFNBQVMsRUFBRSxLQUFLO3lCQUNuQixDQUFDO3FCQUNMO3lCQUFNO3dCQUNILFVBQVUsQ0FBQyxTQUFTLENBQUMsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7cUJBQzdDO2lCQUNKO2FBQ0o7U0FDSjtRQUVELE9BQU8sVUFBVSxDQUFDO0lBQ3RCLENBQUM7Q0FDSjtBQUVELE9BQU8sRUFBQyxZQUFZLEVBQUMsQ0FBQyJ9","import fastGlob from \"fast-glob\";\r\nimport * as path from \"path\";\r\nclass ModuleResolver {\r\n    constructor(testRunner) {\r\n        this.testRunner = testRunner;\r\n    }\r\n    /**\r\n     * A helper method which will resolve modules matching the input glob.\r\n     * @param inputGlobs\r\n     * @return a promise which will be resolved when all modules are.\r\n     */\r\n    resolveGlob(inputGlobs) {\r\n        return fastGlob(inputGlobs)\r\n            .then((resolvedEntries) => {\r\n            for (const entry of resolvedEntries) {\r\n                const resolvedPath = path.resolve(entry.toString());\r\n                this.testRunner.setCurrentFile(resolvedPath);\r\n                require(resolvedPath);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport { ModuleResolver };\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTW9kdWxlUmVzb2x2ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvTW9kdWxlUmVzb2x2ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxRQUFRLE1BQU0sV0FBVyxDQUFDO0FBQ2pDLE9BQU8sS0FBSyxJQUFJLE1BQU0sTUFBTSxDQUFDO0FBRzdCLE1BQU0sY0FBYztJQUloQixZQUFZLFVBQXNCO1FBQzlCLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO0lBQ2pDLENBQUM7SUFFRDs7OztPQUlHO0lBQ0ksV0FBVyxDQUFDLFVBQW9CO1FBQ25DLE9BQU8sUUFBUSxDQUFDLFVBQVUsQ0FBQzthQUN0QixJQUFJLENBQUMsQ0FBQyxlQUFlLEVBQUUsRUFBRTtZQUN0QixLQUFLLE1BQU0sS0FBSyxJQUFJLGVBQWUsRUFBRTtnQkFDakMsTUFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztnQkFDcEQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLENBQUM7Z0JBQzdDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQzthQUN6QjtRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ1gsQ0FBQztDQUNKO0FBRUQsT0FBTyxFQUFDLGNBQWMsRUFBQyxDQUFDIn0="],"names":["TestResult","WriteStreamInterceptor","[object Object]","this","started","streamToIntercept","onWrite","Error","originalStreamWrite","write","string","processedText","writeDirect","text","apply","FancyReporter","stdOutInterceptor","stdErrInterceptor","timer","currentIndentLevel","lines","spinnerIndex","spinnerIcons","activeFileChanged","absolutePath","activeFilePath","push","chalk","cyan","afterDescribe","title","elapsedMs","beforeDescribe","writeLine","getIndentedText","beforeTest","startSpinner","pending","runEnd","results","stop","runStart","testFail","error","stopSpinner","FAIL","prettyStack","createCallsiteRecord","forError","renderSync","frameSize","failures","testTimeout","timeoutMs","TIMEOUT","testSkipped","SKIPPED","testSuccess","SUCCESS","passes","onProcessLog","start","process","stdout","stderr","whiteBright","white","drawHorizontalLine","Promise","resolve","i","columns","yellow","ansiEscapes","cursorLeft","cursorForward","setInterval","cursorBackward","length","result","clearInterval","redBright","greenBright","cursorNextLine","str","StockReporterMap","fancy","DefaultConfig","input","debug","debugBreak","watch","cacheDir","it","before","beforeEach","after","afterEach","reporting","outputPath","undefined","reporters","parallel","idempotentFiles","idempotentTests","argConfig","argsParser","ArgumentParser","description","addGeneralOptions","addTimeoutOptions","addReportingOptions","addParallelOptions","unprocessedArgs","parseArgs","cloneNonNullValues","configPath","path.resolve","debugBrk","itTimeoutMs","beforeTimeoutMs","beforeEachTimeoutMs","afterTimeoutMs","afterEachTimeoutMs","reporter","object","newObject","key","Object","keys","value","addArgument","help","required","action","nargs","dest","defaultValue","parse","configMerger","baseConfig","configs","config","attribute","hasOwnProperty","finalConfig","existsSync","mkdirSync","finalPath","path.extname","spawnSync","stdio","fileConfig","require","merge","runner","TestRunner","stopOnFirstFail","reporterNames","map","name","e","on","globalFunctions","fnName","global","moduleResolver","testRunner","inputGlobs","fastGlob","then","resolvedEntries","entry","resolvedPath","toString","setCurrentFile","all","initialize","resolveGlob","run","catch","console","exit"],"mappings":"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"}